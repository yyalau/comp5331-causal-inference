[tool.pyright]
exclude = ["**/.*", "**/__pycache__", "**/node_modules", "data/**", "experiments/**"]

# These are set to "error" in "strict" mode
reportConstantRedefinition = "warning"
reportDeprecated = "warning"
reportDuplicateImport = "warning"
reportFunctionMemberAccess = "warning"
reportIncompatibleMethodOverride = "warning"
reportIncompatibleVariableOverride = "warning"
reportIncompleteStub = "warning"
reportInconsistentConstructor = "warning"
reportInvalidStubStatement = "warning"
reportMatchNotExhaustive = "warning"
reportMissingParameterType = "warning"
reportMissingTypeArgument = "warning"
reportOverlappingOverload = "warning"
reportPrivateUsage = "warning"
reportTypeCommentUsage = "warning"
# reportUnknownArgumentType = "warning"
# reportUnknownLambdaType = "warning"
# reportUnknownMemberType = "warning"
# reportUnknownParameterType = "warning"
# reportUnknownVariableType = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportUnnecessaryIsInstance = "warning"
# reportUnusedClass = "warning"
reportUnusedImport = "warning"
# reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportUntypedBaseClass = "warning"
reportUntypedClassDecorator = "warning"
reportUntypedFunctionDecorator = "warning"
reportUntypedNamedTuple = "warning"

# These are set to "none" even in "strict" mode
reportCallInDefaultInitializer = "warning"
# reportImplicitOverride = "warning"
reportImplicitStringConcatenation = "warning"
# reportImportCycles = "warning"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "information"
# reportUnusedCallResult = "warning"
